[gd_scene load_steps=5 format=3 uid="uid://g6rdyf5htd3s"]

[ext_resource type="Script" path="res://Objects/Effects/AttackHintFireCone.gd" id="1_x3vfm"]

[sub_resource type="Shader" id="Shader_27l8a"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.2.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,unshaded;
uniform float roughness : hint_range(0,1);
uniform float specular;
uniform float metallic;
uniform float progress  : hint_range(0,1);
uniform float transparency_cap: hint_range(0,1);

uniform vec4 color_main : source_color;
uniform vec4 color_wave : source_color;
uniform vec4 color_highlight : source_color;

uniform float wave_frequency;
uniform float wave_curvature;
uniform float wave_speed;
uniform float wave_thickness;

float random (vec2 uv) {
    return fract(sin(dot(uv.xy,
        vec2(12.9898,78.233))) * 43758.5453123);
}

float clamp_and_map(float value, float istart, float istop, float ostart, float ostop) {
    value = clamp(value, istart, istop);
    return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
}

void fragment() {
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	
	float c = UV.y*wave_frequency + TIME*wave_speed - abs(pow((UV.x-0.5), 2)*5.0)*wave_curvature;
	float v = sin(c)+wave_thickness;
	float v2 = sin(c+1.0)+wave_thickness;
	ALBEDO = v2>v ? color_wave.rgb * v : color_highlight.rgb*v2;
	ALPHA = float(distance(UV.x,0.5) < (1.0- UV.y) * .5 && (1.0-UV.y) < progress);
	ALPHA = min(transparency_cap, ALPHA * min(v, v2));
	//ALPHA = ALPHA*clamp_and_map(distance(UV, vec2(.5, 1.0)), .8, .9, 1.0, 0.0);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ywtm8"]
render_priority = 0
shader = SubResource("Shader_27l8a")
shader_parameter/roughness = 1.0
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/progress = 1.0
shader_parameter/transparency_cap = 0.75
shader_parameter/color_main = Color(0.705882, 0, 0, 1)
shader_parameter/color_wave = Color(1, 0.878431, 0.0431373, 1)
shader_parameter/color_highlight = Color(1, 0, 0, 1)
shader_parameter/wave_frequency = 100.0
shader_parameter/wave_curvature = 0.0
shader_parameter/wave_speed = -20.0
shader_parameter/wave_thickness = 0.5

[sub_resource type="CylinderMesh" id="CylinderMesh_0nmue"]
top_radius = 0.0
bottom_radius = 8.0
height = 16.0
radial_segments = 16
rings = 8
cap_top = false
cap_bottom = false

[node name="AttackHintFireCone" type="Node3D"]
script = ExtResource("1_x3vfm")

[node name="Cone" type="MeshInstance3D" parent="."]
transform = Transform3D(0.6, 0, 0, 0, -4.37114e-08, -0.4, 0, 1, -1.74846e-08, 0, 0, -8)
material_override = SubResource("ShaderMaterial_ywtm8")
mesh = SubResource("CylinderMesh_0nmue")
skeleton = NodePath("../..")
